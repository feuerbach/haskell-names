[ Value
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "function"
    }
, Method
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "method1"
    , className = Ident () "Class"
    }
, Method
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "method2"
    , className = Ident () "Class"
    }
, Selector
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "selector1"
    , typeName = Ident () "DataTypeWithSelectors"
    , constructors = [ Ident () "DataTypeWithSelectors" ]
    }
, Selector
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "selector2"
    , typeName = Ident () "DataTypeWithSelectors"
    , constructors = [ Ident () "DataTypeWithSelectors" ]
    }
, Selector
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "unNewtype"
    , typeName = Ident () "NewtypeWithSelectors"
    , constructors = [ Ident () "NewtypeWithSelectors" ]
    }
, Constructor
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "Constructor1"
    , typeName = Ident () "DataType"
    }
, Constructor
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "Constructor2"
    , typeName = Ident () "DataType"
    }
, Constructor
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "DataTypeWithSelectors"
    , typeName = Ident () "DataTypeWithSelectors"
    }
, Constructor
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "Newtype"
    , typeName = Ident () "Newtype"
    }
, Constructor
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "NewtypeWithSelectors"
    , typeName = Ident () "NewtypeWithSelectors"
    }
, Type
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "TypeSynonym"
    }
, Data
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "DataType"
    }
, Data
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "DataTypeWithSelectors"
    }
, NewType
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "Newtype"
    }
, NewType
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "NewtypeWithSelectors"
    }
, Class
    { symbolModule = ModuleName () "Prelude"
    , symbolName = Ident () "Class"
    }
, Value
    { symbolModule = ModuleName () "SelfReExport"
    , symbolName = Ident () "local"
    }
, Data
    { symbolModule = ModuleName () "SelfReExport"
    , symbolName = Ident () "Local"
    }
]